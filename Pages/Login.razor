@page "/"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authorization;
@inject NavigationManager navigate;
@inject AppAuthenticationStateProvider _appAuthenticationStateProvider;

@attribute [AllowAnonymous]
<div class="w-25 m-auto h-100 d-flex  px-3 " style="min-height:100vh">
    <div class="w-100  " style="margin-top:90px">
        <h5 style="font-weight:800" class="mb-4">SIGN IN WITH ACCOUNT</h5>
        <EditForm Model="@account">
            <DataAnnotationsValidator />

            <div class="form-group mb-3 ">
                <small for="first-name">Supplier No:</small>
                <SfTextBox ID="first-name" @bind-Value="account.Username"></SfTextBox>
            </div>
            <div class="form-group mb-3">
                <small for="last-name">Supplier Name:</small>
                <SfTextBox ID="last-name" Enabled="false" Value="@(GetSupplierName(account.Username)?.SUPPLIER_NAME)"></SfTextBox>
            </div>
            <div class="form-group mb-3">
                <small for="last-name">Password:</small>
                <SfTextBox Type="InputType.Password"  ID="last-name" @bind-Value="account.Password"></SfTextBox>
            </div>
            <ValidationSummary />
            <SfButton @onclick="@(async()=>{await _appAuthenticationStateProvider.LoginAsync(account.Username,account.Password);navigate.NavigateTo("/material");})" CssClass="w-100 mt-4 d-flex align-items-center gap-2">
                <svg fill="#ffffff" width="20px" height="20px" viewBox="-3.5 0 19 19" xmlns="http://www.w3.org/2000/svg" class="cf-icon-svg" stroke="#ffffff"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"><path d="M11.182 8.927v6.912a.794.794 0 0 1-.792.792H1.61a.794.794 0 0 1-.792-.792V8.927a.794.794 0 0 1 .792-.792h.856V6.367a3.534 3.534 0 1 1 7.068 0v1.768h.856a.794.794 0 0 1 .792.792zm-2.756-2.56a2.426 2.426 0 1 0-4.852 0v1.768h4.852zM7.108 11.47a1.108 1.108 0 1 0-1.583 1.001v1.849a.475.475 0 0 0 .95 0v-1.849a1.108 1.108 0 0 0 .633-1.001z"></path></g></svg>
                <h6 class="my-1">LOGIN</h6>

                </SfButton>
        </EditForm>
    </div>
</div>
@code {
    private Account account = new Account();

    public class Account
    {
        [Required(ErrorMessage = "Please enter {0}.")]
        public string Username { get; set; }

        [Required(ErrorMessage = "Please enter {0}.")]
        public string Password { get; set; }



    }

    [Inject]
    IJSRuntime JSRuntime { get; set; }

    public List<OrderDetail> Orders { get; set; }


    protected async override Task OnInitializedAsync()
    {
        //var rs = await _httpClient.GetAsync("https://localhost:7004/api/test");
        //Orders = await rs.Content.ReadFromJsonAsync<List<OrderDetail>>();
        //Console.WriteLine("data " + Orders.Count());
        Orders = await JSRuntime.InvokeAsync<List<OrderDetail>>("GetFilesJson");

        // Orders = Orders.DistinctBy(o=>o.SUPPLIER_NAME).ToList(); 



    }
    public OrderDetail GetSupplierName (string id)
    {
        return Orders.Where(o => o.SUPPLIER_NO == account.Username).FirstOrDefault();
    }

}
