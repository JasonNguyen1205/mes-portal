@page "/material"
@using Microsoft.AspNetCore.Authorization;
@using Syncfusion.Blazor
@inject NavigationManager navigate;
@inject AppAuthenticationStateProvider _appAuthenticationStateProvider;

@attribute [Authorize]


<div class="p-5 " style="min-height:80vh">
@*     <button @onclick="@(()=>{_appAuthenticationStateProvider.LoginAsync("Phan Tin tUONG","ASDFDSADF");})">click me</button>
    <div class="d-flex justify-content-between align-items-center mb-4">
        <small>10 of 1000</small>
        <div class="d-flex align-items-center gap-2">
            <SfTextBox Placeholder="OrderID" />
            <SfButton><svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M11 6C13.7614 6 16 8.23858 16 11M16.6588 16.6549L21 21M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z" stroke="#ffffff" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg></SfButton>
        </div>
    </div> *@
  
    <BaseModal @ref="baseModal" Width="100px" OnOk="UpdateLeadTime">
        <SfTextBox @bind-Value="InputValue"/>
    </BaseModal>
    @if (Orders.Count > 0)
    {
        <SfGrid DataSource="Orders" AllowPaging="true" AllowSorting="true" AllowFiltering="true">
            <GridPageSettings PageSize="10"></GridPageSettings>
            <GridFilterSettings Mode="FilterBarMode.Immediate"></GridFilterSettings>
            <GridColumns>
                <GridColumn HeaderText="" Format="C2" TextAlign="TextAlign.Left" Width="60">
                    <Template>
                        <div class="tags">

                            <a title="" href="" class="color5">
                                <small>Material</small>
                            </a>
                        </div>
                    </Template>
                </GridColumn>
                <GridColumn FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })"
                            AllowFiltering="true" Field=@nameof(OrderDetail.MATERIAL) HeaderText="IDX" TextAlign="TextAlign.Center" Width="120">
                            <Template>
                            @{
                            var material = (context as OrderDetail);
                            <div style="@GetStateCss(Convert.ToInt32(material.MODIFIED))">@material.MATERIAL</div>
                            }
                            </Template>

                        </GridColumn>
                <GridColumn FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })" AllowFiltering="true" Field=@nameof(OrderDetail.SUPPLIER_NO) HeaderText="SUPPLIER NO" Width="150" TextAlign="TextAlign.Center">
                    <Template>
                        @{
                            var material = (context as OrderDetail);
                            <div style="@GetStateCss(Convert.ToInt32(material.MODIFIED))">@material.SUPPLIER_NO</div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })" AllowFiltering="true" Field=@nameof(OrderDetail.SUPPLIER_NAME) HeaderText=" SUPPLIER NAME" Format="d" Type="ColumnType.Date" TextAlign="TextAlign.Right" Width="130">
                    <Template>
                        @{
                            var material = (context as OrderDetail);
                            <div style="@GetStateCss(Convert.ToInt32(material.MODIFIED))">@material.SUPPLIER_NAME</div>
                        }
                    </Template>
                </GridColumn>
                <GridColumn FilterSettings="@(new FilterSettings{ Operator = Operator.Contains })" AllowFiltering="true" Field=@nameof(OrderDetail.LEAD_TIME) HeaderText="LEAD TIME" Format="C2" TextAlign="TextAlign.Right" Width="120">
                    <Template>
                        @{
                            var material = (context as OrderDetail);
                            <div style="@GetStateCss(Convert.ToInt32(material.MODIFIED))">@material.LEAD_TIME</div>
                        }
                    </Template>
                </GridColumn>
               

                <GridColumn HeaderText="Action" Format="C2" TextAlign="TextAlign.Right" Width="120">
                    <Template>
                        @{
                            var material = (context as OrderDetail);
                            <div @onclick="@(()=>{baseModal.OpenDialog();MaterialId=material.MATERIAL;})" class="my-2 d-flex align-items-center gap-2 justify-content-end">
                                <svg width="22px" height="22px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="#fbbf1b"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M9 5H7C5.89543 5 5 5.89543 5 7V19C5 20.1046 5.89543 21 7 21H9M15 5H17C18.1046 5 19 5.89543 19 7V9" stroke="#fbbf1b" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M14.902 20.3343L12.7153 20.7716L13.1526 18.585C13.1914 18.3914 13.2865 18.2136 13.4261 18.074L17.5 14L19.5 12L21.4869 13.9869L19.4869 15.9869L15.413 20.0608C15.2734 20.2004 15.0956 20.2956 14.902 20.3343Z" stroke="#fbbf1b" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z" stroke="#fbbf1b" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
                            </div>
                        }
                       
                    </Template>
                </GridColumn>
            </GridColumns>
        </SfGrid>

    }
   </div>

